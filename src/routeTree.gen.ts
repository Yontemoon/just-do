/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as StatsImport } from './routes/stats'
import { Route as SignupImport } from './routes/signup'
import { Route as SigninImport } from './routes/signin'
import { Route as CalendarImport } from './routes/calendar'
import { Route as IndexImport } from './routes/index'
import { Route as CalendarDateImport } from './routes/calendar.$date'

// Create/Update Routes

const StatsRoute = StatsImport.update({
  path: '/stats',
  getParentRoute: () => rootRoute,
} as any)

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const SigninRoute = SigninImport.update({
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const CalendarRoute = CalendarImport.update({
  path: '/calendar',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CalendarDateRoute = CalendarDateImport.update({
  path: '/$date',
  getParentRoute: () => CalendarRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/calendar': {
      id: '/calendar'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof CalendarImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/stats': {
      id: '/stats'
      path: '/stats'
      fullPath: '/stats'
      preLoaderRoute: typeof StatsImport
      parentRoute: typeof rootRoute
    }
    '/calendar/$date': {
      id: '/calendar/$date'
      path: '/$date'
      fullPath: '/calendar/$date'
      preLoaderRoute: typeof CalendarDateImport
      parentRoute: typeof CalendarImport
    }
  }
}

// Create and export the route tree

interface CalendarRouteChildren {
  CalendarDateRoute: typeof CalendarDateRoute
}

const CalendarRouteChildren: CalendarRouteChildren = {
  CalendarDateRoute: CalendarDateRoute,
}

const CalendarRouteWithChildren = CalendarRoute._addFileChildren(
  CalendarRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/calendar': typeof CalendarRouteWithChildren
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/stats': typeof StatsRoute
  '/calendar/$date': typeof CalendarDateRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/calendar': typeof CalendarRouteWithChildren
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/stats': typeof StatsRoute
  '/calendar/$date': typeof CalendarDateRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/calendar': typeof CalendarRouteWithChildren
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/stats': typeof StatsRoute
  '/calendar/$date': typeof CalendarDateRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/calendar'
    | '/signin'
    | '/signup'
    | '/stats'
    | '/calendar/$date'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/calendar' | '/signin' | '/signup' | '/stats' | '/calendar/$date'
  id:
    | '__root__'
    | '/'
    | '/calendar'
    | '/signin'
    | '/signup'
    | '/stats'
    | '/calendar/$date'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CalendarRoute: typeof CalendarRouteWithChildren
  SigninRoute: typeof SigninRoute
  SignupRoute: typeof SignupRoute
  StatsRoute: typeof StatsRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CalendarRoute: CalendarRouteWithChildren,
  SigninRoute: SigninRoute,
  SignupRoute: SignupRoute,
  StatsRoute: StatsRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/calendar",
        "/signin",
        "/signup",
        "/stats"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/calendar": {
      "filePath": "calendar.tsx",
      "children": [
        "/calendar/$date"
      ]
    },
    "/signin": {
      "filePath": "signin.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/stats": {
      "filePath": "stats.tsx"
    },
    "/calendar/$date": {
      "filePath": "calendar.$date.tsx",
      "parent": "/calendar"
    }
  }
}
ROUTE_MANIFEST_END */
